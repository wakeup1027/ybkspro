<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>sunlotus</groupId>
  <artifactId>sunlotus_S1</artifactId>
  <packaging>jar</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>sunlotus_S1 Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
	    <groupId>com.jfinal</groupId>
	    <artifactId>jfinal-undertow</artifactId>
	    <version>1.3</version>
	</dependency>
	<dependency>
        <groupId>com.jfinal</groupId>
        <artifactId>cos</artifactId>
        <version>26Dec2008</version>
    </dependency>
	<dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>fastjson</artifactId>
	    <version>1.2.32</version>
	</dependency>
	
	<dependency>
	    <groupId>com.ibeetl</groupId>
	    <artifactId>beetl</artifactId>
	    <version>2.7.11</version>
	</dependency>
	
	<dependency>
	    <groupId>c3p0</groupId>
	    <artifactId>c3p0</artifactId>
	    <version>0.8.5.2</version>
	</dependency>

	<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>5.1.20</version>
	</dependency>
	
	<dependency>
	    <groupId>org.apache.poi</groupId>
	    <artifactId>poi-ooxml</artifactId>
	    <version>3.9</version>
	</dependency>
	
	<!-- quartz依赖包 -->
	<dependency>
	    <groupId>org.quartz-scheduler</groupId>
	    <artifactId>quartz</artifactId>
	    <version>2.2.1</version>
	</dependency>
	
	<!-- socket -->
	<dependency>
	    <groupId>io.undertow</groupId>
	    <artifactId>undertow-websockets-jsr</artifactId>
	    <version>2.0.16.Final</version>
	</dependency>
    <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-api</artifactId>
        <version>7.0</version>
        <scope>provided</scope>
    </dependency>
    
    <!-- redis -->
    <dependency>
		<groupId>de.ruedigermoeller</groupId>
		<artifactId>fst</artifactId>
		<version>2.31</version>
	</dependency>

    <dependency>
	    <groupId>redis.clients</groupId>
	    <artifactId>jedis</artifactId>
	    <version>2.10.1</version>
	</dependency>
	
    <dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-pool2</artifactId>
	  <version>2.0</version>
	</dependency>
      
  </dependencies>
  
  <!-- properties>
       <java.version>1.8</java.version>
  </properties -->

  <build>
    <finalName>sunlotus_S1</finalName>
    <plugins>
    	<plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>3.2</version>
	        <configuration>
	          <source>1.8</source>
	          <target>1.8</target>
	        </configuration>
	    </plugin>
    	<!--
			jar 包中的配置文件优先级高于 config 目录下的 "同名文件"
			因此，打包时需要排除掉 jar 包中来自 src/main/resources 目录的
			配置文件，否则部署时 config 目录中的同名配置文件不会生效
		 -->
		<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-jar-plugin</artifactId>
		    <version>2.6</version>
		    <configuration>
		        <excludes>
		            <exclude>*.txt</exclude>
		            <exclude>*.xml</exclude>
		            <exclude>*.properties</exclude>
		        </excludes>
		        <encoding>utf8</encoding> 
		    </configuration>
		</plugin>
		
		<!-- 
		    使用 mvn clean package 打包 
		    更多配置可参考官司方文档：http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html
		-->
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-assembly-plugin</artifactId>
		  <version>3.1.0</version>
		  <executions>
		    <execution>
		    <id>make-assembly</id>
		    <phase>package</phase>
		    <goals>
		      <goal>single</goal>
		    </goals>
		 
		    <configuration>
		      <!-- 打包生成的文件名 -->
		      <finalName>${project.artifactId}</finalName>
		      <!-- jar 等压缩文件在被打包进入 zip、tar.gz 时是否压缩，设置为 false 可加快打包速度 -->
		      <recompressZippedFiles>false</recompressZippedFiles>
		      <!-- 打包生成的文件是否要追加 release.xml 中定义的 id 值 -->
		      <appendAssemblyId>true</appendAssemblyId>
		      <!-- 指向打包描述文件 package.xml -->
		      <descriptors>
		        <descriptor>package.xml</descriptor>
		      </descriptors>
		      <!-- 打包结果输出的基础目录 -->
		      <outputDirectory>${project.build.directory}/</outputDirectory>
		      </configuration>
		      </execution>
		    </executions>
		</plugin>
    </plugins>
    
  </build>
</project>
